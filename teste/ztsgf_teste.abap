*&---------------------------------------------------------------------*
*& Report  ZTSGF_TESTE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

report  ztsgf_teste.

*data: teste type char4 value '@3D@'.
*WRITE teste.

selection-screen begin of block b1.
  parameters p_teste type mara-matnr.
selection-screen end of block b1.

selection-screen begin of tabbed block tabstrip for 24 lines.
selection-screen tab (1) text-s10 user-command 'STRD' default screen
9000.
selection-screen tab (30) text-s11 user-command 'EXTD' default screen
9100.
selection-screen end of block tabstrip.

selection-screen begin of screen 9000 as subscreen.

  parameters: p_teste1 type mara-mtart.

selection-screen end of screen 9000.

* Extended selection criteria
selection-screen begin of screen 9100 as subscreen.

  parameters: p_teste2 type j_1bnfdoc-docnum.

selection-screen end of screen 9100.



*SELECTION-SCREEN BEGIN OF BLOCK b1.
*PARAMETERS p_matnr TYPE ztbca_ret_10-matnr.
*SELECTION-SCREEN END OF BLOCK b1.
*
*data: w_mara type ztbca_ret_10.
*
*select *
*  up to 1 rows
*  from ZTBCA_RET_10
*  into w_mara
*  where matnr eq p_matnr.
*ENDSELECT.
*
*
*
*  write w_mara-matnr.
*
*
*set PARAMETER ID 'MAT'  FIELD p_matnr.
*call transaction 'MM03' AND SKIP FIRST SCREEN.
*
*
*
*DATA: w_teste TYPE c LENGTH 50.
*
*WRITE text-001 TO w_teste.
*
*REPLACE FIRST OCCURRENCE OF '&' IN w_teste WITH w_mara-matnr.
*
*WRITE w_teste.
**
**
*
*PARAMETERS: p_num TYPE n.
*DATA v_result TYPE n.
*v_result = p_num MOD 2.
*
*IF v_result EQ 0.
*  WRITE 'PAR'.
*ELSE.
*  WRITE 'IMPAR'.
*ENDIF.

*data: lt_teste TYPE STANDARD TABLE OF sval,
*      lw_teste TYPE sval.
*
*lw_teste-tabname = 'COBL'.
*  lw_teste-fieldname = 'KOSTL'.
*  APPEND lw_teste to lt_teste.
*
**while lw_teste-value is initial.
*CALL FUNCTION 'POPUP_GET_VALUES'
*        EXPORTING
**         NO_VALUE_CHECK        = ' '
*          popup_title           = 'Informe o Centro de custo da operação'
**         START_COLUMN          = '5'
**         START_ROW             = '5'
**       IMPORTING
**         RETURNCODE            =
*        tables
*          fields                = lt_teste
*       EXCEPTIONS
*         ERROR_IN_FIELDS        = 1
*         OTHERS                 = 2.
*
*READ table lt_teste into lw_teste INDEX 1.
*IF sy-subrc <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*ENDIF.
**ENDWHILE.
*
*data teste2 TYPE kostl.
*data teste3 TYPE kostl.
*
*teste2 = teste3 = lw_teste-value.
*
*DATA teste TYPE i VALUE 4.
*
*teste = teste ** 2.

*WRITE teste.
*write sy-sysid.
*PARAMETERS: p_matnr TYPE mara-matnr.

*TYPES: BEGIN OF y_mara,
*  matnr TYPE mara-matnr,
*  mtart TYPE mara-mtart,
*  matkl TYPE mara-matkl,
*  maktx TYPE makt-maktx,
*END OF y_mara,
*BEGIN OF y_makt,
*  matnr TYPE makt-matnr,
*  spras TYPE makt-spras,
*  maktx TYPE makt-maktx,
*END OF y_makt,
*yt_mara TYPE SORTED TABLE OF y_mara WITH UNIQUE KEY matnr,
*yt_makt TYPE standard TABLE OF y_makt. "WITH UNIQUE KEY matnr spras.
*
*DATA: t_mara TYPE yt_mara,
*      t_makt TYPE yt_makt,
*      w_mara LIKE LINE OF t_mara,
*      w_makt LIKE LINE OF t_makt.
*FIELD-SYMBOLS: <fs_mara> LIKE LINE OF t_mara,
*               <fs_makt> LIKE LINE OF t_makt.
**PERFORM zf_read_mara.
**PERFORM zf_read_makt.
*
*DO 2 TIMES.
*  APPEND INITIAL LINE TO t_makt ASSIGNING <fs_makt>.
*  <fs_makt>-matnr = '000000000010000000'.
*  <fs_makt>-spras = 'PT'.
*  <fs_makt>-maktx = 'aaaaaaaaaaaaaaa'.
*ENDDO.
*
*SELECT matnr mtart matkl
*  FROM mara
*  INTO TABLE t_mara
*  FOR ALL ENTRIES IN t_makt
*  WHERE matnr EQ t_makt-matnr.
*
*WRITE 'aaaaaaaaaaaaaaaaaaaaaa'.
*write sy-abcde+23(1).

*SELECT COUNT(*)
*  FROM mara.
*
*WRITE sy-dbcnt.

data teste value '123'.
data teste2 value '234'.
assert teste = teste2.

*LOOP AT t_mara INTO w_mara.
*  CLEAR w_makt.
*  READ TABLE t_makt INTO w_makt WITH KEY matnr = w_mara-matnr.
*  IF sy-subrc IS INITIAL.
*    w_mara-maktx = w_makt-maktx.
*    MODIFY t_mara FROM w_mara.
*  ENDIF.
*ENDLOOP.

*LOOP AT t_mara ASSIGNING <fs_mara>.
*  READ TABLE t_makt ASSIGNING <fs_makt> WITH KEY matnr = <fs_mara>-matnr.
*  IF sy-subrc IS INITIAL.
*    <fs_mara>-maktx = <fs_makt>-maktx.
*  ENDIF.
*ENDLOOP.

*LOOP AT t_mara ASSIGNING <fs_mara>.
*  READ TABLE t_makt ASSIGNING <fs_makt> WITH KEY matnr = <fs_mara>-matnr spras = sy-langu.
*  IF sy-subrc IS INITIAL.
*    <fs_mara>-maktx = <fs_makt>-maktx.
*  ENDIF.
*ENDLOOP.

*LOOP AT t_mara INTO w_mara.
*  WRITE: w_mara-matnr, /, w_mara-mtart, /, w_mara-matkl, /, w_mara-maktx, /, /.
*ENDLOOP.
*
*LOOP AT t_mara INTO w_mara.
*  READ TABLE t_makt INTO w_makt WITH KEY matnr = w_mara-matnr.
*  WRITE: w_mara-matnr, /, w_mara-mtart, /, w_mara-matkl, /, w_makt-maktx, /, /.
*ENDLOOP.

**&---------------------------------------------------------------------*
**&      Form  zf_read_mara
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*FORM zf_read_mara.
*  SELECT matnr mtart matkl UP TO 20 ROWS
*    FROM mara
*    INTO TABLE t_mara.
*ENDFORM.                    "zf_read_mara

**&---------------------------------------------------------------------*
**&      Form  zf_read_mara
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*FORM zf_read_mara.
*  SELECT a~matnr a~mtart a~matkl b~maktx UP TO 20 ROWS
*    FROM mara AS a
*    INNER JOIN makt AS b ON b~matnr EQ a~matnr
*    INTO TABLE t_mara
*    WHERE b~spras EQ 'EN'.
*ENDFORM.                    "zf_read_mara

**&---------------------------------------------------------------------*
**&      Form  zf_read_mara
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*FORM zf_read_mara.
*  SELECT a~matnr a~mtart a~matkl b~maktx UP TO 20 ROWS
*    FROM mara AS a
*    LEFT OUTER JOIN makt AS b ON b~matnr EQ a~matnr AND b~spras EQ 'EN'
*    INTO TABLE t_mara.
*ENDFORM.                    "zf_read_mara

**&---------------------------------------------------------------------*
**&      Form  zf_read_makt
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*FORM zf_read_makt.
*  SELECT matnr spras maktx
*    FROM makt
*    INTO TABLE t_makt
*    FOR ALL ENTRIES IN t_mara
*    WHERE matnr EQ t_mara-matnr
*      AND spras EQ sy-langu.
*ENDFORM.                    "zf_read_makt
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
